### PT-BR (üáßüá∑): 
# Modifique o programa anterior (pag149-ex5.23.py) de forma a ler um n√∫mero n.
# Imprima os n primeiros n√∫meros primos.

### EN (üá∫üá∏):
# Modify the previous program (pag149-ex5.23.py) to read a number n.
# Print the first n prime numbers.

# git commit -m "Modified prime number checker to print the first n prime numbers."

contador_primos = 0  # Contador de n√∫meros primos encontrados
numero_atual = 2  # Come√ßamos testando pelo primeiro n√∫mero primo

while True:  # Loop infinito para manter o programa rodando at√© o usu√°rio decidir parar
    numero = input("Pressione ENTER para ver o pr√≥ximo n√∫mero primo ou digite 0 para sair: ")
    
    if numero == "0":  # Se o usu√°rio digitar 0, o programa encerra
        print("Programa encerrado.")
        break
    
    # Verifica se numero_atual √© primo
    primo = True  # Assume que o n√∫mero atual √© primo at√© provar o contr√°rio
    
    if numero_atual < 2:  # N√∫meros menores que 2 n√£o s√£o primos
        primo = False
    elif numero_atual == 2:  # O n√∫mero 2 √© primo
        primo = True
    elif numero_atual % 2 == 0:  # N√∫meros pares maiores que 2 n√£o s√£o primos
        primo = False
    else:
        divisor = 3  # Come√ßa testando pelo 3
        while divisor < numero_atual:  # Loop para verificar se √© primo
            if numero_atual % divisor == 0:
                primo = False  # Encontrou um divisor, n√£o √© primo
                break  # Sai do loop pois j√° sabemos que n√£o √© primo
            divisor += 2  # Testa apenas n√∫meros √≠mpares

    if primo:  # Se for primo, exibe o n√∫mero e incrementa o contador de primos
        print(f"Primo encontrado: {numero_atual}")
        contador_primos += 1

    numero_atual += 1  # Passa para o pr√≥ximo n√∫mero e continua o loop
